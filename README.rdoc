
Здесь продемонстрирован небольшой пример сайта, который состоит из текстовых страниц, организованных в иерархию. То есть, одна страница может быть под-страницей другой страницы.
На главной странице расположено дерево страниц сайта:
----------------------------------------------------------------------------------------
|-- Site 
  |   |-- name1
  |   |-- name2
  |   |   |-- name3
  |   |-- name4
 
----------------------------------------------------------------------------------------
Используется гем: * Ancestry: http://www.ruby-doc.org/docs/ProgrammingRuby/, обеспечивающий нас всеми необходимыми методами для структурирования иерархии нашего сайта i.e. root чтобы получить главные страницы, ancestors, children для получения предков и потомков узла.

Чтобы начать мы применяем команду scaffold для Page модели, получиный интерфейс и есть место где можно быстро заполнить поля в БД т.е. name, content, ancestry атрибуты. Также заменяется поле ancestry на выпадающий список (collection_select) всех страниц, чтобы мы могли выделить корневую страницу для создающейся. 

Возникшая необходимость получить всех потомков использует метод arrange класса OrderedHash, который позволяет получить все записи без необходимости делать несколько запросов к БД.

Гем MiniProfiler для оптимизации производительности, предоставляющии приятный интерфейс для работы в development среде.

Так же выполнена валидация на name атрибут , согласно условию /\w+|[а-яА-Я]+/ 

Задействован Rails метод simple_format , возвращающий текст трансформируемый в разметку HTML,
используещий простые правила форматирования:
----------------------------------------------------------------------------------------
simple_format("<blink>Unblinkable.</blink>")
# => "<p>Unblinkable.</p>"
----------------------------------------------------------------------------------------

Есть немного rspec тестов, юнит на проверку валидации и тест на поведение страницы вцелом.  

В дизайне сайта используется стороннияя библиотека Foundation , что придает приятный стиль.

|-- Из возможных улутшений:
|     |-- Нет кеширования на уровне модели,контроллера, вьюхи
|     |-- Не задействован JS для редактирования или сортировки иерархии сайта(jQuery UI)
|-- Возможно есть более изящный подход о котором я не знаю...